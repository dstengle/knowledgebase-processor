#!/usr/bin/env python3
"""Debug script to test SPARQL DELETE queries generated by the system."""

import sys
sys.path.insert(0, '/workspaces/knowledgebase-processor/src')

from knowledgebase_processor.query_interface.sparql_interface import SparqlQueryInterface
from rdflib import Graph

def test_sparql_delete_queries():
    """Test the SPARQL DELETE queries that are being generated."""
    
    print("=== Testing SPARQL DELETE query generation ===\n")
    
    # Create a mock SPARQL interface (without actual connection)
    sparql_interface = SparqlQueryInterface()
    
    # Test document URIs
    test_document_uris = [
        "http://example.org/kb/documents/daily-note-2024-11-07-Thursday.md",
        "http://example.org/kb/documents/CTO Coffee-2024-11-07.md"
    ]
    
    print("Test document URIs:")
    for uri in test_document_uris:
        print(f"  - {uri}")
    print()
    
    # Test 1: DELETE query without named graph
    print("1. DELETE query WITHOUT named graph:")
    print("=" * 50)
    
    # Build VALUES clause for document URIs
    values_clause = "VALUES ?doc { " + " ".join(f"<{uri}>" for uri in test_document_uris) + " }"
    
    # Build the DELETE query (without named graph)
    query_without_graph = f"""
    PREFIX kb: <http://example.org/kb/>
    
    {values_clause}
    
    DELETE {{
        ?entity ?predicate ?object .
        ?doc ?docPredicate ?docObject .
    }}
    WHERE {{
        {{
            # Delete all entities that reference these documents as source
            ?entity kb:sourceDocument ?doc .
            ?entity ?predicate ?object .
        }}
        UNION
        {{
            # Delete the document entities themselves
            ?doc ?docPredicate ?docObject .
        }}
    }}
    """
    
    print(query_without_graph)
    print()
    
    # Test 2: DELETE query with named graph
    print("2. DELETE query WITH named graph:")
    print("=" * 50)
    
    graph_uri = "http://example.org/knowledgebase"
    
    query_with_graph = f"""
    PREFIX kb: <http://example.org/kb/>
    
    {values_clause}
    
    DELETE {{
        GRAPH <{graph_uri}> {{
            ?entity ?predicate ?object .
            ?doc ?docPredicate ?docObject .
        }}
    }}
    WHERE {{
        GRAPH <{graph_uri}> {{
            {{
                # Delete all entities that reference these documents as source
                ?entity kb:sourceDocument ?doc .
                ?entity ?predicate ?object .
            }}
            UNION
            {{
                # Delete the document entities themselves
                ?doc ?docPredicate ?docObject .
            }}
        }}
    }}
    """
    
    print(query_with_graph)
    print()
    
    # Test 3: Load a sample RDF file and extract document URIs
    print("3. Test document URI extraction:")
    print("=" * 50)
    
    try:
        # Load one of the generated RDF files
        rdf_file = "/workspaces/knowledgebase-processor/sample_data/.kbp/temp_rdf/daily-note-2024-11-07-Thursday.ttl"
        graph = Graph()
        graph.parse(rdf_file, format='turtle')
        
        print(f"Loaded RDF file: {rdf_file}")
        print(f"Number of triples: {len(graph)}")
        
        # Extract document URIs using the same method
        extracted_uris = sparql_interface._extract_document_uris(graph)
        print(f"Extracted document URIs: {extracted_uris}")
        print()
        
        # Test 4: Show what the actual DELETE query would look like for this document
        if extracted_uris:
            print("4. Actual DELETE query for this document:")
            print("=" * 50)
            
            values_clause_actual = "VALUES ?doc { " + " ".join(f"<{uri}>" for uri in extracted_uris) + " }"
            
            actual_query = f"""
            PREFIX kb: <http://example.org/kb/>
            
            {values_clause_actual}
            
            DELETE {{
                ?entity ?predicate ?object .
                ?doc ?docPredicate ?docObject .
            }}
            WHERE {{
                {{
                    # Delete all entities that reference these documents as source
                    ?entity kb:sourceDocument ?doc .
                    ?entity ?predicate ?object .
                }}
                UNION
                {{
                    # Delete the document entities themselves
                    ?doc ?docPredicate ?docObject .
                }}
            }}
            """
            
            print(actual_query)
        
    except Exception as e:
        print(f"Error loading RDF file: {e}")
    
    print("\n=== SPARQL Query Analysis Complete ===")
    print("\nPotential issues to check:")
    print("1. Ensure SPARQL prefixes are properly defined")
    print("2. Check if VALUES clause syntax is correct for your SPARQL endpoint")
    print("3. Verify UNION syntax is supported")
    print("4. Test if DELETE...WHERE syntax is correct")
    print("5. Check if named graph syntax is properly supported")

if __name__ == "__main__":
    test_sparql_delete_queries()